{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../src/FooterItem.svelte","../node_modules/svelte/store/index.mjs","../src/store.js","../src/FooterItemClear.svelte","../src/FooterItemExport.svelte","../src/FooterItemImport.svelte","../src/FooterItemFullscreen.svelte","../src/themes/theme-list.js","../src/ThemeSelector.svelte","../src/Footer.svelte","../src/Dropzone.svelte","../src/Editor.svelte","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if (typeof $$scope.dirty === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j];\n                if (attributes[attribute.name]) {\n                    j++;\n                }\n                else {\n                    node.removeAttribute(attribute.name);\n                }\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.setAttribute('aria-hidden', 'true');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nconst seen_callbacks = new Set();\nfunction flush() {\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.18.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_each_keys, validate_store, xlink_attr };\n","<script>\n  export let caption;\n  export let callback = null;\n  export let className = \"footer-item\";\n  export let icon;\n</script>\n\n<div class={className} on:click={callback}>\n  <i class={icon} />\n\n  <span style=\"padding: 0px 0px 0px 5px; top: auto; bottom:auto\">\n    {caption}\n  </span>\n  <slot />\n</div>\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from \"svelte/store\";\n\nexport let fullscreen = writable(false)\nexport let theme = writable(\"default\")\nexport let content = writable(\"\")\nexport let documentName = writable(\"\")\n\n\n// Load from local storage\nif (localStorage.getItem(\"theme\")) { theme.set(localStorage.getItem(\"theme\")) }\nif (localStorage.getItem(\"content\")) { content.set(localStorage.getItem(\"content\")) }\nif (sessionStorage.getItem(\"documentName\")) { documentName.set(sessionStorage.getItem(\"documentName\")) }\n\n// Update CSS with new theme\ntheme.subscribe(newTheme => {\n\tconsole.log(newTheme)\n\t\t;\n\tif (!newTheme) {\n\t\tnewTheme = \"default\";\n\t}\n\tconst path = \"/themes/\";\n\tconst ext = \".css\"\n\tconst defaultThemeCSS = `${path}default${ext}`;\n\tlet themeCSS = `${path}${newTheme}${ext}`;\n\n\tfetch(themeCSS).then(res => {\n\t\tlet href = res.ok ? themeCSS : defaultThemeCSS;\n\t\tdocument.getElementById(\"stylesheet\").href = href;\n\t});\n})","<script>\n  import FooterItem from \"./FooterItem.svelte\";\n  import { content, documentName } from \"./store.js\";\n\n  function clearEditor() {\n    const confirm = window.confirm(\"Delete all content from the editor?\");\n    if (!confirm) return;\n    localStorage.removeItem(\"content\");\n    sessionStorage.removeItem(\"documentName\");\n    content.set(\"\");\n    documentName.set(\"\");\n  }\n</script>\n\n<FooterItem callback={clearEditor} caption=\"Clear\" icon=\"fa fa-eraser\" />\n","<script>\n  import FooterItem from \"./FooterItem.svelte\";\n  import { content, documentName } from \"./store.js\";\n\n  function downloadFile() {\n    if (!content || !$content) {\n      return;\n    }\n    if (!documentName || !$documentName) {\n      documentName.set($content.slice(0, 10));\n    }\n\n    var a = window.document.createElement(\"a\");\n    a.href = window.URL.createObjectURL(\n      new Blob([content], { type: \"text/plain\" })\n    );\n    a.download = $documentName;\n\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n</script>\n\n<FooterItem\n  callback={() => downloadFile()}\n  caption=\"Export\"\n  icon=\"fa fa-download\" />\n","<script>\n  import FooterItem from \"./FooterItem.svelte\";\n  import { content, documentName } from \"./store.js\";\n\n  function openFile(e) {\n    const textFile = e.target.files[0];\n    const fr = new FileReader();\n    fr.addEventListener(\"load\", () => {\n      localStorage.setItem(\"content\", event.target.result);\n      sessionStorage.setItem(\"documentName\", textFile.name);\n      content.set(event.target.result);\n      documentName.set(textFile.name);\n    });\n    fr.readAsText(textFile);\n  }\n</script>\n\n<FooterItem\n  callback={() => {\n    document.getElementById('file-input').click();\n  }}\n  caption=\"Open\"\n  icon=\"fa fa-upload\">\n  <input\n    on:change={e => openFile(e)}\n    id=\"file-input\"\n    type=\"file\"\n    name=\"name\"\n    style=\"display: none;\" />\n</FooterItem>\n","<script>\n  import FooterItem from \"./FooterItem.svelte\";\n  import { fullscreen } from \"./store.js\";\n\n  function toggleFullScreen() {\n    if (document.fullscreenElement) {\n      document.exitFullscreen();\n      fullscreen.set(false);\n    } else {\n      document.documentElement.requestFullscreen();\n      fullscreen.set(true);\n    }\n  }\n</script>\n\n<FooterItem\n  caption=\"\"\n  icon=\"fa fa-compress-arrows-alt\"\n  callback={toggleFullScreen} />\n","const themes =\n\t[\n\t\t\"default\",\n\t\t\"oasis\",\n\t\t\"oldschool\",\n\t\t\"saturday\",\n\t\t\"simple\",\n\t\t\"sunday\",\n\t\t\"narrow\",\n\t\t\"vscode\",\n\t\t\"vault76\",\n\t]\n\nexport default themes;","<script>\n  import themes from \"./themes/theme-list\";\n  import FooterItem from \"./FooterItem.svelte\";\n  import { theme } from \"./store.js\";\n\n  function changeTheme(e) {\n    const newTheme = e.target.value;\n    localStorage.setItem(\"theme\", newTheme);\n    theme.set(newTheme);\n  }\n</script>\n\n<FooterItem caption=\"\" icon=\"fa fa-palette\">\n\n  <select id=\"themeSelector\" on:change={changeTheme} style=\"cursor: pointer\">\n    {#each themes as item}\n      <!-- content here -->\n      <option value={item}>{item}</option>\n    {/each}\n  </select>\n</FooterItem>\n","<script>\n  import FooterItem from \"./FooterItem.svelte\";\n  import FooterItemClear from \"./FooterItemClear.svelte\";\n  import FooterItemExport from \"./FooterItemExport.svelte\";\n  import FooterItemImport from \"./FooterItemImport.svelte\";\n  import FooterItemFullscreen from \"./FooterItemFullscreen.svelte\";\n  import ThemeSelector from \"./ThemeSelector.svelte\";\n  import pkg from \"../package.json\";\n</script>\n\n<div class=\"footer-item-container\">\n  <ThemeSelector />\n</div>\n<div class=\"footer-middle\">\n  <FooterItem\n    caption={pkg.version}\n    icon=\"fab fa-github\"\n    callback={() => window.open(pkg.repository.repo_url, '_blank')} />\n</div>\n<div class=\"footer-item-container\">\n  <FooterItemClear />\n  <FooterItemImport />\n  <FooterItemExport />\n  <FooterItemFullscreen />\n\n</div>\n<!-- <FooterItem caption=\"Words\" icon=\"fa fa-tachometer-alt\" /> -->\n","<script>\n  import { onMount } from \"svelte\";\n  import { content, documentName } from \"./store.js\";\n\n  onMount(() => {\n    let dropArea = document.getElementById(\"main\");\n    [\"dragenter\", \"dragover\", \"dragleave\", \"drop\"].forEach(eventName => {\n      dropArea.addEventListener(eventName, preventDefaults, false);\n    });\n\n    function preventDefaults(e) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    [\"dragenter\", \"dragover\"].forEach(eventName => {\n      dropArea.addEventListener(eventName, highlight, false);\n    });\n    [\"dragleave\", \"drop\"].forEach(eventName => {\n      dropArea.addEventListener(eventName, unhighlight, false);\n    });\n\n    function highlight(e) {\n      dropArea.classList.add(\"highlight\");\n    }\n\n    function unhighlight(e) {\n      dropArea.classList.remove(\"highlight\");\n    }\n\n    dropArea.addEventListener(\"drop\", handleDrop, false);\n\n    function readFile(event) {\n      // textarea.textContent = event.target.result;\n      localStorage.setItem(\"content\", event.target.result);\n      content.set(event.target.result);\n    }\n    function handleDrop(e) {\n      let dt = e.dataTransfer;\n      let file = dt.files[0];\n      localStorage.setItem(\"documentName\", file.name);\n      documentName.set(file.name);\n      console.log(file.name);\n      const objectURL = window.URL.createObjectURL(file);\n      const fr = new FileReader();\n      fr.addEventListener(\"load\", readFile);\n      fr.readAsText(file);\n    }\n  });\n</script>\n","<script>\n  import Dropzone from \"./Dropzone.svelte\";\n  import { content } from \"./store.js\";\n\n  function saveContent(e) {\n    localStorage.setItem(\"content\", e.target.value);\n  }\n\n  function handleInput(e) {\n    /* Handles tabulation on TAB key*/\n    if (e.keyCode == 9 || e.which == 9) {\n      e.preventDefault();\n      var s = this.selectionStart;\n      this.value =\n        this.value.substring(0, this.selectionStart) +\n        \"\\t\" +\n        this.value.substring(this.selectionEnd);\n      this.selectionEnd = s + 1;\n    }\n  }\n</script>\n\n<div class=\"editor-text-container\">\n  <textarea\n    bind:value={$content}\n    on:keydown={handleInput}\n    on:keyup={saveContent}\n    name=\"editor\"\n    id=\"editor\"\n    cols=\"30\"\n    rows=\"10\" />\n  <Dropzone />\n</div>\n","import App from './App.svelte';\n// import scss to let rollup make the theme css.\nimport \"./themes/oldschool.scss\";\nimport \"./themes/default.scss\";\nimport \"./themes/simple.scss\";\nimport \"./themes/oasis.scss\";\nimport \"./themes/saturday.scss\";\nimport \"./themes/sunday.scss\";\nimport \"./themes/narrow.scss\";\nimport \"./themes/vscode.scss\";\nimport \"./themes/vault76.scss\";\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","get_slot_context","definition","ctx","$$scope","tar","src","k","assign","slice","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_input_value","input","set_style","key","important","style","setProperty","current_component","set_current_component","onMount","Error","get_current_component","on_mount","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flush","length","shift","update","pop","i","has","add","clear","fragment","before_update","dirty","p","after_update","outroing","transition_in","block","local","delete","transition_out","o","outros","c","d","create_component","mount_component","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","ready","ret","rest","hydrate","l","Array","from","childNodes","children","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","slot_ctx","lets","merged","len","Math","max","caption","className","icon","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","fullscreen","theme","content","documentName","clearEditor","window","confirm","localStorage","removeItem","sessionStorage","getItem","newTheme","console","log","themeCSS","fetch","res","href","ok","getElementById","downloadFile","$content","$documentName","URL","createObjectURL","Blob","download","body","click","e","textFile","files","fr","FileReader","setItem","result","readAsText","openFile","toggleFullScreen","fullscreenElement","exitFullscreen","documentElement","requestFullscreen","themes","changeTheme","iterations","pkg","open","repo_url","dropArea","preventDefaults","preventDefault","stopPropagation","highlight","classList","unhighlight","remove","readFile","eventName","file","dataTransfer","handleInput","saveContent","keyCode","which","selectionStart","substring","selectionEnd"],"mappings":"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"}